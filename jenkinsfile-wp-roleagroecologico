pipeline {
    environment {
        branchname =  env.BRANCH_NAME.toLowerCase()
        registryCredential = 'jenkins_registry'
        project = "roleagroecologico"
    }
  
    agent { kubernetes { 
            label 'builder'
            defaultContainer 'builder'
        }
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: '15', artifactNumToKeepStr: '15'))
        disableConcurrentBuilds()
        skipDefaultCheckout()
    }
  
    stages {
        stage('CheckOut') {            
            steps { 
                checkout scm
                stash name: 'source', includes: '**/*'
            }            
        }

        stage('Build') {
            when { anyOf { branch 'homolog'; branch 'php-fpm-hom'; branch 'main'; branch 'php-fpm-prod'; } }
            steps {
                script {
                    def commitHash = sh(script: 'git rev-parse --short HEAD', returnStdout: true).trim()
                    env.TAG = "${commitHash}"
                    
                    imagename1 = "registry.sme.prefeitura.sp.gov.br/wordpress/${env.branchname}/${env.project}-apache"
                    imagename2 = "registry.sme.prefeitura.sp.gov.br/wordpress/${env.branchname}/${env.project}-php"
                    
                    docker.withRegistry( 'https://registry.sme.prefeitura.sp.gov.br', registryCredential ) {
                        sh('docker pull registry.sme.prefeitura.sp.gov.br/wordpress/wp-base-apache:3.3-apache')
                        dockerImage1 = docker.build(imagename1, "-f Dockerfile.apache .")
                        dockerImage1.push("${TAG}")
                    }
                    
                    docker.withRegistry( 'https://registry.sme.prefeitura.sp.gov.br', registryCredential ) {
                        sh('docker pull registry.sme.prefeitura.sp.gov.br/wordpress/wp-base-php:6.8.2-php8.4-fpm')
                        dockerImage2 = docker.build(imagename2, "-f Dockerfile.php .")
                        dockerImage2.push("${TAG}")
                    }

                    sh '''#!/bin/bash
                        docker image ls --format "{{.Repository}}\t{{.ID}}" | grep ${project} | awk '{print $2}' | xargs docker image rm || true
                    '''
                }
            }
        }
        
        stage('Deploy Prod'){
            when { anyOf {  branch 'main'; branch 'php-fpm-prod'; } }
            agent { kubernetes { 
                    label 'devops-tools'
                    defaultContainer 'devops-tools'
                }
            }   
            steps {
                script{                 
                    if ( env.branchname == 'main' || env.branchname == 'php-fpm-prod' ) {
                        withCredentials([string(credentialsId: 'aprovadores-wordpress', variable: 'aprovadores')]) {
                            timeout(time: 24, unit: "HOURS") {
                                input message: 'Deseja realizar o deploy?', ok: 'SIM', submitter: "${aprovadores}"
                            }
                        }
                    }
                    withCredentials([string(credentialsId: 'MYSQL_PROD', variable: 'database'), file(credentialsId: 'config_wordpress', variable: 'config')]) {
                        unstash 'source'
                        sh '''
                            [ -f "$HOME/.kube/config" ] && rm -f "$HOME/.kube/config"
                            mkdir -p "$HOME/.kube"
                            cp "$config" "$HOME/.kube/config"
                            export KUBECONFIG="$HOME/.kube/config"

                            cd k8s/helm

                            export BRANCHNAME="${branchname}"
                            export AMBIENTE="prod"
                            export DATABASE_HOST="$database"
                            export DATABASE_NAME="${project}_prod"
                            export DATABASE_USER="usr_${project}_prod"
                            export IMAGE_TAG="${TAG}"
                            export INGRESS_HOST="${project}.sme.prefeitura.sp.gov.br"
                            export WP_URL="http://${INGRESS_HOST}"

                            envsubst < values.yaml > values-prod.yaml

                            helm upgrade ${project} . \
                                --namespace prod-${project} \
                                --set replicaCount=1 \
                                --values values-prod.yaml \
                                --install \
                                --history-max 3 \
                                --timeout 1m0s \
                                --atomic \
                                --debug \
                                --wait
                            '''
                        sh('if [ -f '+"$home"+'/.kube/config ];then rm -f '+"$home"+'/.kube/config; fi')
                   }
                }
            }           
        } 

        stage('Deploy Hom'){
            when { anyOf {  branch 'homolog'; branch 'php-fpm-hom'; } }
            agent { kubernetes { 
                    label 'devops-tools'
                    defaultContainer 'devops-tools'
                }
            }   
            steps {
                script{                 
                    withCredentials([string(credentialsId: 'MYSQL_DEV_HOM', variable: 'database'), file(credentialsId: 'config_wordpress', variable: 'config')]) {
                        unstash 'source'
                        sh '''
                            [ -f "$HOME/.kube/config" ] && rm -f "$HOME/.kube/config"
                            mkdir -p "$HOME/.kube"
                            cp "$config" "$HOME/.kube/config"
                            export KUBECONFIG="$HOME/.kube/config"

                            cd k8s/helm

                            export BRANCHNAME="${branchname}"
                            export AMBIENTE="hom"
                            export DATABASE_HOST="$database"
                            export DATABASE_NAME="${project}_hom"
                            export DATABASE_USER="usr_${project}_hom"
                            export IMAGE_TAG="${TAG}"
                            export INGRESS_HOST="hom-${project}.sme.prefeitura.sp.gov.br"
                            export WP_URL="http://${INGRESS_HOST}"

                            envsubst < values.yaml > values-hom.yaml

                            helm upgrade ${project} . \
                                --namespace hom-${project} \
                                --set replicaCount=1 \
                                --values values-hom.yaml \
                                --install \
                                --history-max 3 \
                                --timeout 1m0s \
                                --atomic \
                                --debug \
                                --wait
                            '''
                        sh('if [ -f '+"$home"+'/.kube/config ];then rm -f '+"$home"+'/.kube/config; fi')
                   }
                }
            }           
        }     
    }

  post {
    always { sh('if [ -f '+"$home"+'/.kube/config ];then rm -f '+"$home"+'/.kube/config; fi') }
  }
}
