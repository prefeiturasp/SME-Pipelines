pipeline {
    environment {
        branchname =  env.BRANCH_NAME.toLowerCase()
        registryCredential = 'jenkins_registry'
    }
  
    agent { kubernetes { 
            label 'builder'
            defaultContainer 'builder'
        }
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: '15', artifactNumToKeepStr: '15'))
        disableConcurrentBuilds()
        skipDefaultCheckout()
    }
  
    stages {
        stage('CheckOut') {            
            steps { checkout scm }            
        }

        stage('Build') {
            when { anyOf { branch 'homolog'; branch 'php-fpm-hom'; } }
            steps {
                script {
                    def commitHash = sh(script: 'git rev-parse --short HEAD', returnStdout: true).trim()
                    env.TAG = "${commitHash}-${BUILD_NUMBER}"
                    
                    imagename1 = "registry.sme.prefeitura.sp.gov.br/wordpress/${env.branchname}/roleagroecologico-apache"
                    dockerImage1 = docker.build(imagename1, "-f Dockerfile.apache .")
                    docker.withRegistry( 'https://registry.sme.prefeitura.sp.gov.br', registryCredential ) {
                        dockerImage1.push("${TAG}")
                    }
                    sh "docker rmi $imagename1"

                    imagename2 = "registry.sme.prefeitura.sp.gov.br/wordpress/${env.branchname}/roleagroecologico-php"
                    dockerImage2 = docker.build(imagename2, "-f Dockerfile.php .")
                    docker.withRegistry( 'https://registry.sme.prefeitura.sp.gov.br', registryCredential ) {
                        dockerImage2.push("${TAG}")
                    }
                    sh "docker rmi $imagename2"
                }
            }
        }
        
        // stage('Deploy Prod'){
        //     when { anyOf {  branch 'main'; branch 'php-fpm-prod'; } }        
        //     steps {
        //         script{
        //             if ( env.branchname == 'main' ) {
        //                 withCredentials([string(credentialsId: 'aprovadores-wordpress', variable: 'aprovadores')]) {
        //                     timeout(time: 24, unit: "HOURS") {
        //                         input message: 'Deseja realizar o deploy?', ok: 'SIM', submitter: "${aprovadores}"
        //                     }
        //                 }
        //             }                    
        //             withCredentials([file(credentialsId: 'config_wordpress', variable: 'config')]){
        //                 sh('if [ -f '+"$home"+'/.kube/config ];then rm -f '+"$home"+'/.kube/config; fi')
        //                 sh('cp $config '+"$home"+'/.kube/config')
        //                 sh 'kubectl rollout restart deployment/prod-educacao -n prod-educacao'
        //                 sh('if [ -f '+"$home"+'/.kube/config ];then rm -f '+"$home"+'/.kube/config; fi')
        //            }
        //         }
        //     }           
        // }

        stage('Deploy Hom'){
            when { anyOf {  branch 'homolog'; branch 'php-fpm-hom'; } }
            agent { kubernetes { 
                    label 'devops-tools'
                    defaultContainer 'devops-tools'
                }
            }   
            steps {
                script{                 
                    withCredentials([file(credentialsId: 'config_wordpress', variable: 'config')]){
                        sh '''
                            [ -f "$HOME/.kube/config" ] && rm -f "$HOME_DIR/.kube/config"
                            mkdir -p "$HOME_DIR/.kube"
                            cp "$config" "$HOME_DIR/.kube/config"
                            export KUBECONFIG="$HOME/.kube/config"

                            cd k8s/helm

                            export BRANCHNAME="${branchname}"
                            export DATABASE_HOST="mydb:3306"
                            export DATABASE_NAME="wp_db"
                            export DATABASE_USER="wp_user"
                            export WP_URL="http://localhost"
                            export IMAGE_TAG = "${TAG}"
                            export AMBIENTE = "hom"

                            envsubst < values.yaml > values-hom.yaml
                            
                            helm upgrade roleagroecologico . \
                                --namespace hom-roleagroecologico \
                                --values values-hom.yaml \
                                --install \
                                --dry-run
                            '''
                        sh('if [ -f '+"$home"+'/.kube/config ];then rm -f '+"$home"+'/.kube/config; fi')
                   }
                }
            }           
        }     
    }

  post {
    always { sh('if [ -f '+"$home"+'/.kube/config ];then rm -f '+"$home"+'/.kube/config; fi') }
  }
}
