pipeline {
    agent {
        dockerContainer 'jenkins-agent:01'
    }

    options {
        ansiColor('xterm')
        timestamps ()
    }

    environment {
        branchname = 'SME-Proximo-API'
        SONAR_PROJECT = 'SONAR_TESTES'
    }

    stages {
        stage('Sonar & Tests') {
            steps {
                script {
                    def scannerHome = tool 'sonarscanner-7.2.0';
                    withSonarQubeEnv('sonar-lab'){
                        tool name: 'alpine-python-3.12', type: 'jenkins.plugins.shiningpanda.tools.PythonInstallation'

                        sh'''
                            pip install --root-user-action=ignore --upgrade pip
                            pip install --root-user-action=ignore --no-cache-dir -r requirements.txt
                            pip install --root-user-action=ignore  coverage
                            coverage run -m pytest
                            coverage xml
                        '''
                        
                        sh"""
                            ${scannerHome}/bin/sonar-scanner \
                                -Dsonar.projectKey=${SONAR_PROJECT} \
                                -Dsonar.branch.name=${branchname} \
                                -Dsonar.python.coverage.reportPaths=coverage.xml \
                                -Dsonar.sources=.
                        """
                    }
                }
            }
        }

        stage("Sonar Quality gate") {
            steps {
                script {
                    timeout(15) {
                        def qg = waitForQualityGate()
                        if (qg.status != 'OK') {
                            error "Pipeline aborted due to quality gate failure: ${qg.status}"
                        }
                    }
                }
            }
        }
    }
    
    post {
        always {
            cleanWs()
        }
    }
}